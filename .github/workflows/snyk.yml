name: Reusable Snyk Docker Image Scan

on:
  workflow_call:
    inputs:
      tag:
        description: "Label to tag the docker image with"
        required: true
        type: string
      dockerfile_path:
        description: Path to dockerfile
        required: false
        type: string
        default: Dockerfile #--Dockerfile in current working directory
    secrets:
      snyk_token:
        description: "Snyk service account API token"
        required: true

jobs:
  snyk:
    name: Scan docker image
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 #--v4.2.2

    - name: Build docker image
      run: |
        docker build \
          --tag ${{ inputs.tag }}:scan \
          --file ${{ inputs.dockerfile_path }} .

    - name: Scan docker image using Snyk
      continue-on-error: true
      uses: snyk/actions/docker@master
      env:
        SNYK_TOKEN: ${{ secrets.snyk_token }}
      with:
        image: ${{ inputs.tag }}:scan
        args: --file=${{ inputs.dockerfile_path }}

    - name: Monitor docker image using Snyk
      uses: snyk/actions/docker@master
      env:
        SNYK_TOKEN: ${{ secrets.snyk_token }}
      with:
        command: monitor
        image: ${{ inputs.tag }}:scan
        args: --file=Dockerfile

    - name: Replace security-severity "null" for license-related findings 
      run: |
        sed -i 's/"security-severity": "null"/"security-severity": "0"/g' snyk.sarif

    - name: Replace security-severity "undefined" for license-related findings 
      run: |
        sed -i 's/"security-severity": "undefined"/"security-severity": "0"/g' snyk.sarif

    - name: Upload result to GitHub Code Scanning
      uses: github/codeql-action/upload-sarif@f1f6e5f6af878fb37288ce1c627459e94dbf7d01 #--v3.30.1
      with:
        sarif_file: snyk.sarif
